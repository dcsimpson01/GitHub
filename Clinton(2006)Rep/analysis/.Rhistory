xlab="Log Income", type="s",
ylab= "Probability of at Least One Vist")
lambda_fncni=exp(poi_co[2]+poi_co[4]+poi_co[5]*x)
prob_fncni=1-ppois(0,lambda_fncni)
plot(x,prob_fncni,
main="Patient: Female, No Chronic, No Pr. Insurance",
xlab="Log Income", type="s",
ylab= "Probability of at Least One Vist")
summary(poisson_a)
lambda_fncni=exp(poi_co[1]+poi_co[4]+poi_co[5]*x)
prob_fncni=1-ppois(0,lambda_fncni)
plot(x,prob_fncni,
main="Patient: Female, No Chronic, No Pr. Insurance",
xlab="Log Income", type="s",
ylab= "Probability of at Least One Vist")
lambda_fcni=exp(poi_co[1]+poi_co[3]+poi_co[4]+poi_co[5]*x)
prob_fcni=1-ppois(0,lambda_fc)
plot(x,prob_fcni,
main="Patient: Female, Chronic, Pr. Insurance",
xlab="Log Income", type="s",
ylab= "Probability of at Least One Vist")
lambda_fcni=exp(poi_co[1]+poi_co[3]+poi_co[4]+poi_co[5]*x)
prob_fcni=1-ppois(0,lambda_fc)
plot(x,prob_fcni,
main="Patient: Female, Chronic, No Pr. Insurance",
xlab="Log Income", type="s",
ylab= "Probability of at Least One Vist")
lambda_fncni=exp(poi_co[1]+poi_co[4]+poi_co[5]*x)
prob_fncni=1-ppois(0,lambda_fncni)
plot(x,prob_fncni,
main="Patient: Female, No Chronic, No Pr. Insurance",
xlab="Log Income", type="s",
ylab= "Probability of at Least One Vist")
quant2 = rq(log(wage)~education+experience, data =CPS1985, tau=seq(0.05,.95, by=.05))
summary(quant2)
plot(quant2)
plot(summary(quant2))
# Load AER CPS 1985 Data
data("CPS1985",package="AER")
# Load liberary for quantile regression
library(quantreg)
##### Data Summary #####
summary(CPS1985)
plot(ecdf(CPS1985$wage),
main="CDF Wages",
xlab="Wage $/hr",
ylab="CDF")
plot(ecdf(CPS1985$education),
main="CDF Education",
xlab="Years of Education",
ylab="CDF")
plot(ecdf(CPS1985$experience),
main="CDF Experience",
xlab="Years of Experience",
ylab="CDF")
model1= lm(log(wage) ~ education + experience, data=CPS1985)
summary(model1)
vcovHC(model1)
coeftest(model1,vcov.=vcovHC)
quant1 = rq(log(wage)~education + experience, data = CPS1985, tau=.5)
summary(quant1)
quant2 = rq(log(wage)~education+experience, data =CPS1985, tau=seq(0.05,.95, by=.05))
summary(quant2)
plot(quant2)
plot(summary(quant2))
quant2 = rq(wage~education+experience, data =CPS1985, tau=seq(0.05,.95, by=.05))
summary(quant2)
plot(quant2)
plot(summary(quant2))
quant2 = rq(log(wage)~education+experience, data =CPS1985, tau=seq(0.05,.95, by=.05))
summary(quant2)
plot(quant2)
plot(summary(quant2))
quant2 = rq(logwage~education+experience, data =CPS1985, tau=seq(0.05,.95, by=.05))
summary(quant2)
plot(quant2)
plot(summary(quant2))
quant2 = rq(logwage~education+experience, data =CPS1985, tau=seq(0.05,.95, by=.05))
summary(quant2)
plot(quant2)
plot(summary(quant2))
quant2 = rq(wage~education+experience, data =CPS1985, tau=seq(0.05,.95, by=.05))
summary(quant2)
plot(quant2)
plot(summary(quant2))
quant2 = rq(log(wage)~education+experience, data =CPS1985, tau=seq(0.05,.95, by=.05))
summary(quant2)
plot(quant2)
plot(summary(quant2))
tt=[-1,-6]
t=cbind(-1,-6)
t*t''
tt'
asdf
รง
tt=[-1,-6]
stop()
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
library(gmm)
install.packages(gmm)
upgrade.packages(checkBuilt = TRUE)
upgrade.packages(checkBuilt = TRUE)
.libPaths()
upgrade.packages(checkBuilt = TRUE)
library(zoo)
install.packages("zoo")
install.packages(gmm)
gmm
install.packages(c("cluster", "curl", "lattice", "survival"))
library(gmm)
install.packages("gmm")
library("gmm", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("AER")
library("IRdisplay", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("AER", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("IRkernel")
IRkernel::installspec(user=FALSE)
install.packages("devtools")
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()
install.packages("namespace")
library("namespace", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
install.packages(c("repr", "IRdisplay", "evaluate", "crayon", "pbdZMQ", "devtools", "uuid", "digest"))
library("IRdisplay", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("repr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("evaluate", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("crayon", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("pbdZMQ", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("uuid", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("digest", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
devtools::install_github('IRkernel/IRkernel')
library("pbdZMQ", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
devtools::install_github('IRkernel/IRkernel')
install.packages("xcrun")
update(xcrun)
update('xcrun')
library("git2r", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("xcrun")
devtools::install_github('IRkernel/IRkernel')
library("pbdZMQ", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
xcode-select --install
AER
library(AER)
install.packages("xcrun")
IRkernel::installspec()
install.packages("haven")
library("haven", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
rm(list = ls())
rm(list=ls())
install.packages("rvest")
# define url
startpage<- "https://projects.fivethirtyeight.com/polls/?ex_cid=midterms-header"
# when were polls updated?
# extract page info
read_html(startpage) %>%
# id selector of interest
html_nodes(css = "#intro > div > p") %>%
# extract text
html_text()
library(rvest)
# define url
startpage<- "https://projects.fivethirtyeight.com/polls/?ex_cid=midterms-header"
# when were polls updated?
# extract page info
read_html(startpage) %>%
# id selector of interest
html_nodes(css = "#intro > div > p") %>%
# extract text
html_text()
# use CSS selectors to id page elements of interest - can select multiple at a time
read_html(startpage) %>%
# id selector of interest
html_nodes(css = "p")
read_html(startpage) %>%
# id selector of interest
html_nodes(css = ".gradeText") %>%
html_text()
# pull table of poll results from today
polls_today<- read_html(startpage) %>%
html_nodes(css = "body > div.container.content > div.polls > div:nth-child(1) > table") %>%
html_table(fill = T)
# pull all tables on page that meet css criteria
polls_recent<- read_html(startpage) %>%
html_nodes(css = "body > div.container.content > div.polls > div > table") %>%
html_table(fill = T)
View(polls_recent)
newpage<- read_html(startpage) %>%
html_nodes(css = "#nav-list > li:nth-child(1) > ol > li:nth-child(2) > a") %>%
html_attr(name = "href")
require(devtools)
# install RSelenium
devtools::install_github("ropensci/RSelenium")
# load  (use require instead of library)
require(RSelenium)
remDr <- remoteDriver(browser = "chrome")
remDr$open()
startpage<- "https://www.google.com"
# navigate to a url
remDr$navigate(startpage)
remDr$refresh()
startpage<- "https://www.google.com"
# navigate to a url
remDr$navigate(startpage)
remDr$refresh()
# name elements you need to interact with (click, enter text, etc.)
searchbox<- remDr$findElement(using = "css", "#lst-ib")
# interact with elements
searchbox$clickElement()
searchbox$sendKeysToElement(list("hello world", key = "enter"))
?searchbox
??searchbox
newlink<- remDr$findElement(using = "css", "#rso > div:nth-child(1) > div > div:nth-child(3) > div > h3 > a")
newlink$highlightElement(wait = 1)
newlink$getElementText()
newlink$clickElement()
newlink<- remDr$findElement(using = "css", "#rso > div:nth-child(1) > div > div:nth-child(3) > div > h3 > a")
# where are we now?
remDr$getCurrentUrl()
remDr$goBack()
HOUSE.106<-read.table(file="***PATH***/HOUSE.106.AKN.ipe.R")
getwd
getwd()
HOUSE.106<-read.table(file="/Users/dsimp/Clinton(2006)/raw/dataverse_files/HOUSE.106.AKN.ipe.R")
HOUSE.106<-read.table(file="/Users/dsimp/Clinton(2006)/raw/dataverse_files/HOUSE.106.AKN.ipe.R")
HOUSE.106<-read.table(file="/Users/dsimp/GitHub/Clinton(2006)/raw/dataverse_files/HOUSE.106.AKN.ipe.R")
HOUSE.106<-read.table(file="/Users/dsimp/GitHub/Clinton(2006)Rep/raw/dataverse_files/HOUSE.106.AKN.ipe.R")
HOUSE.106<-read.table(file="/Users/dsimp/GitHub/Clinton(2006)Rep/raw/dataverse_files/HOUSE.106.AKN.R")
View(HOUSE.106)
View(HOUSE.106)
HOUSE.106<-read.table(file="/Users/dsimp/GitHub/Clinton(2006)Rep/raw/dataverse_files/HOUSE.106.AKN.R")
R<-HOUSE.106$pty
R[R==100]<-0
R[R==200]<-1
R[R==328]<-0
rm =(list =all)
rm(list=ls(all=TRUE))
HOUSE.106<-read.table(file="/Users/dsimp/GitHub/Clinton(2006)Rep/raw/dataverse_files/HOUSE.106.AKN.R")
rm(list=ls())
rm(rm)
View(rm)
View(rm)
View(rm)
rm(list=ls())
HOUSE.106<-read.table(file="/Users/dsimp/GitHub/Clinton(2006)Rep/raw/dataverse_files/HOUSE.106.AKN.R")
R<-HOUSE.106$pty
R[R==100]<-0
R[R==200]<-1
R[R==328]<-0
rep<-HOUSE.106$pty
rep[rep==100]<-2
rep[rep==200]<-17
rep[rep==328]<-2
postscript(file="/Users/dsimp/GitHub/Clinton(2006)Rep/raw/dataverse_files/Figure1.ps",
horizontal=F,width=7,height=7)
par(mfrow=c(2,2))
plot(HOUSE.106$lc,HOUSE.106$x106mean,xlab="District Ideology",ylab="Rep. Induced Preference",pch=rep)
plot(HOUSE.106$splc,HOUSE.106$x106mean,xlab="Same-Party Ideology",ylab="Rep. Induced Preference", pch=rep)
plot(HOUSE.106$lc,HOUSE.106$splc,ylab="Same-Party Ideology",xlab="District Ideology", pch=rep)
plot(HOUSE.106$splc,HOUSE.106$nsplc,ylab="Same-Party Ideology",xlab="Non-Same-Party Ideology", pch=rep)
dev.off()
postscript(file="/Users/dsimp/GitHub/Clinton(2006)Rep/raw/dataverse_files/Figure1.ps",
horizontal=F,width=7,height=7)
par(mfrow=c(2,2))
plot(HOUSE.106$lc,HOUSE.106$x106mean,xlab="District Ideology",ylab="Rep. Induced Preference",pch=rep)
plot(HOUSE.106$splc,HOUSE.106$x106mean,xlab="Same-Party Ideology",ylab="Rep. Induced Preference", pch=rep)
plot(HOUSE.106$lc,HOUSE.106$splc,ylab="Same-Party Ideology",xlab="District Ideology", pch=rep)
plot(HOUSE.106$splc,HOUSE.106$nsplc,ylab="Same-Party Ideology",xlab="Non-Same-Party Ideology", pch=rep)
Figure1.ps
plot(HOUSE.106$lc,HOUSE.106$x106mean,xlab="District Ideology",ylab="Rep. Induced Preference",pch=rep)
View(HOUSE.106)
plot(HOUSE.106$lc,HOUSE.106$x106mean,xlab="District Ideology",ylab="Rep. Induced Preference",pch=rep)
plot(HOUSE.106$lc,HOUSE.106$x106mean,xlab="District Ideology",ylab="Rep. Induced Preference")
plot(HOUSE.106$lc, HOUSE.106$x106kmean)
x = c(1,2,3,4,5,6,7,8,9,10)
y = c(2,4,6,7,8,8,9,3,4,4)
plot(x,y)
?plot()
plot(x,y, type =l)
plot(x,y, type ="l")
rm(list=ls())
HOUSE.106<-read.table(file="/Users/dsimp/GitHub/Clinton(2006)Rep/raw/dataverse_files/HOUSE.106.AKN.R")
R<-HOUSE.106$pty
R[R==100]<-0
R[R==200]<-1
R[R==328]<-0
rep<-HOUSE.106$pty
rep[rep==100]<-2
rep[rep==200]<-17
rep[rep==328]<-2
plot(HOUSE.106$lc,HOUSE.106$x106mean,xlab="District Ideology",ylab="Rep. Induced Preference",pch=rep)
qplot(HOUSE.106$lc,HOUSE.106$x106mean,xlab="District Ideology",ylab="Rep. Induced Preference",pch=rep)
rep<-HOUSE.106$pty
rep[rep==100]<-2
rep[rep==200]<-17
rep[rep==328]<-2
postscript(file="/Users/dsimp/GitHub/Clinton(2006)Rep/raw/dataverse_files/Figure1.ps",
horizontal=F,width=7,height=7)
par(mfrow=c(2,2))
plot(HOUSE.106$lc,HOUSE.106$x106mean,xlab="District Ideology",ylab="Rep. Induced Preference",pch=rep)
plot(HOUSE.106$splc,HOUSE.106$x106mean,xlab="Same-Party Ideology",ylab="Rep. Induced Preference", pch=rep)
plot(HOUSE.106$lc,HOUSE.106$splc,ylab="Same-Party Ideology",xlab="District Ideology", pch=rep)
plot(HOUSE.106$splc,HOUSE.106$nsplc,ylab="Same-Party Ideology",xlab="Non-Same-Party Ideology", pch=rep)
dev.off()
?def.off()
?dev
postscript(file="/Users/dsimp/GitHub/Clinton(2006)Rep/docs/Figure1.ps",
horizontal=F,width=7,height=7)
par(mfrow=c(2,2))
plot(HOUSE.106$lc,HOUSE.106$x106mean,xlab="District Ideology",ylab="Rep. Induced Preference",pch=rep)
plot(HOUSE.106$splc,HOUSE.106$x106mean,xlab="Same-Party Ideology",ylab="Rep. Induced Preference", pch=rep)
plot(HOUSE.106$lc,HOUSE.106$splc,ylab="Same-Party Ideology",xlab="District Ideology", pch=rep)
plot(HOUSE.106$splc,HOUSE.106$nsplc,ylab="Same-Party Ideology",xlab="Non-Same-Party Ideology", pch=rep)
rep<-HOUSE.106$pty
rep[rep==100]<-2
rep[rep==200]<-17
rep[rep==328]<-2
postscript(file="/Users/dsimp/GitHub/Clinton(2006)Rep/docs/Figure1.ps",
horizontal=F,width=7,height=7)
par(mfrow=c(2,2))
plot(HOUSE.106$lc,HOUSE.106$x106mean,xlab="District Ideology",ylab="Rep. Induced Preference",pch=rep)
plot(HOUSE.106$splc,HOUSE.106$x106mean,xlab="Same-Party Ideology",ylab="Rep. Induced Preference", pch=rep)
plot(HOUSE.106$lc,HOUSE.106$splc,ylab="Same-Party Ideology",xlab="District Ideology", pch=rep)
plot(HOUSE.106$splc,HOUSE.106$nsplc,ylab="Same-Party Ideology",xlab="Non-Same-Party Ideology", pch=rep)
dev.off()
?postscript()
rm(list=ls())
HOUSE.106<-read.table(file="/Users/dsimp/GitHub/Clinton(2006)Rep/raw/dataverse_files/HOUSE.106.AKN.R")
R<-HOUSE.106$pty
R[R==100]<-0
R[R==200]<-1
R[R==328]<-0
rep<-HOUSE.106$pty
rep[rep==100]<-2
rep[rep==200]<-17
rep[rep==328]<-2
plot(HOUSE.106$lc,HOUSE.106$x106mean,xlab="District Ideology",ylab="Rep. Induced Preference",pch=rep)
ggplot(x = HOUSE.106$lc, y = HOUSE.106$x106mean)+
geom_point()
library(ggplot2)
ggplot(x = HOUSE.106$lc, y = HOUSE.106$x106mean)+
geom_point()
ggplot(House.106, x = HOUSE.106$lc, y = HOUSE.106$x106mean)+
geom_point()
ggplot(HOUSE.106, aes(x = HOUSE.106$lc, y = HOUSE.106$x106mean))+
geom_point()
ggplot(HOUSE.106, aes(x = HOUSE.106$lc, y = HOUSE.106$x106mean))+
geom_point()
rm(list=ls())
library(ggplot2)
HOUSE.106<-read.table(file="/Users/dsimp/GitHub/Clinton(2006)Rep/raw/dataverse_files/HOUSE.106.AKN.R")
R<-HOUSE.106$pty
R[R==100]<-0
R[R==200]<-1
R[R==328]<-0
rep<-HOUSE.106$pty
rep[rep==100]<-2
rep[rep==200]<-17
rep[rep==328]<-2
ggplot(HOUSE.106, aes(x = HOUSE.106$lc, y = HOUSE.106$x106mean))+
geom_point()
test
test= ggplot(HOUSE.106, aes(x = HOUSE.106$lc, y = HOUSE.106$x106mean))+
geom_point()
test
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col = Species)) +
geom_jitter() +
scale_color_brewer(palette = "Dark2")
rm(list=ls())
library(ggplot2)
#install.packages("ggpubr")
#install.packages("gridExtra")
#install.packages("stargazer")
library("stargazer")
library("gridExtra")
library("ggpubr")
library("foreign")
#install.packages("lmtest")
library("lmtest")
#install.packages("sandwich")
library("sandwich")
#install.packages("gridExtra")
library("gridExtra")
library("plyr")
library("RColorBrewer")
setwd("/Users/dsimp/GitHub/Clinton(2006)Rep/analysis")
# Refer to Clinton's Code with HOUSE.106
HOUSE.106<-read.table(file="/Users/dsimp/GitHub/Clinton(2006)Rep/raw/dataverse_files/HOUSE.106.AKN.R")
# Refer to Simpson's Code with data
data = HOUSE.106
# Create Republican Indicator Variable
data$R=0 # Set as democrat
data$R[data$pty==200]=1 # Change to 1 if a Republican
# Create Party ID Names
data$partyname = "Democrat"
data$partyname[data$R==1] = "Republican"
data$C_N = data$numsp + data$numi + data$numop #Clinton uses for weights and to weight standard errors
data$C_pctsp = data$numsp/data$C_N             # Same party share
data$C_pctnsp = data$numnsp/data$C_N           # Non same party share
data$C_pcti = data$numi/data$C_N               # Independent share
data$C_pctop = data$numop/data$C_N             # Opposite party share
data$C_pctspid = data$C_pctsp * data$splc     # Same party percent * same party id
data$C_pctnspid = data$C_pctnsp*data$nsplc    # Non Same party percent * Non same party id
data$C_pctiid = data$C_pcti*data$ilc				  #	Independent percent * idenependent party id
data$C_pctopid = data$C_pctop*data$oplc	      #	Opposite party percent * opposite party id
###########################################
#  Begin: Simpson Regression Analysis
###########################################
# Replicate Clinton Table 1
Ct1_1 = lm(x106mean ~ lc + R, data = data, weights = C_N)
Ct1_1 # Clinton Table 1 Model 1
Ct1_2 = lm(x106mean ~ C_pctspid + C_pctnspid + R, data = data, weights = C_N)
Ct1_2 # Clinton Table 1 Model 2
# Replicate Clinton with weights as dependent variabless
Ct1_2b = lm(x106mean ~ C_pctspid + C_pctnspid + data$splc + data$nsplc + data$C_pctsp + data$C_pctnsp +  R, data = data, weights = C_N)
Ct1_2b
# Replicate with SP OP and IND and Clinton weigths
Ct1_2c = lm(x106mean ~ C_pctspid + C_pctiid + C_pctopid + data$splc + data$ilc + data$oplc + data$C_pctsp + data$C_pcti + data$C_pctop  +  R, data = data, weights = C_N)
Ct1_2c
stargazer(Ct1_1,Ct1_2,Ct1_2b,Ct1_2c, omit.stat=c("LL","ser","f"),
title = "Table 1 Replication - Clinton Weights",
dep.var.labels=c("Legislator Ideal Point"),
column.labels=c("C-M1","C-M2","E-M2: All", "E-M2: 3G"),
covariate.labels=c("Mean Ideology","% SP x SP Ideology","% NSP x NSP Ideology","% IND x IND Ideology","% OP x OP Ideology",
"SP Ideology", "NSP Ideology", "IND Ideology","OP Ideology",
"% SP","% NSP","% IND","% OP","GOP Indicator"))
# Replicate Clinton Table 2
Ct2_5 = lm(x106mean ~ C_pctspid + C_pctnspid, data = data, weights = C_N, subset = R==1)
Ct2_5 # Clinton Table 2 Model 5
Ct2_8 = lm(x106mean ~ C_pctspid + C_pctnspid, data = data, weights = C_N, subset = R==0)
Ct2_8 # Clinton Table 2 Model 8
Ct2_5b = lm(x106mean ~ C_pctspid + C_pctnspid + data$splc + data$nsplc + data$C_pctsp + data$C_pctnsp, data = data, weights = C_N, R=1)
Ct2_5b # Compare to Clinton Table 2 Model 5
lm(x106mean ~ C_pctspid + C_pctnspid + data$splc + data$nsplc, data = data, weights = C_N, R=1)
lm(x106mean ~ C_pctspid + C_pctnspid + data$splc + data$nsplc, data = data, R=1)
Ct2_5b = lm(x106mean ~ C_pctspid + C_pctnspid + data$splc + data$nsplc + data$C_pctsp + data$C_pctnsp, data = data, weights = C_N, subset = R==1)
Ct2_5b # Compare to Clinton Table 2 Model 5
# Replicate Clinton Table 2
Ct2_5 = lm(x106mean ~ C_pctspid + C_pctnspid, data = data, weights = C_N, subset = R==1)
Ct2_5 # Clinton Table 2 Model 5
Ct2_5b = lm(x106mean ~ C_pctspid + C_pctnspid + data$splc + data$nsplc + data$C_pctsp + data$C_pctnsp, data = data, weights = C_N, subset = R==1)
Ct2_5b # Compare to Clinton Table 2 Model 5
Ct2_5c = lm(x106mean ~ C_pctspid + C_pctiid + C_pctopid + data$splc + data$ilc + data$oplc + data$C_pctsp + data$C_pcti + data$C_pctop, data = data, weights = C_N, subset= R==1)
Ct2_5c # Compare to Clinton Table 2 Model 5
Ct2_8b = lm(x106mean ~ C_pctspid + C_pctnspid + data$splc + data$nsplc + data$C_pctsp + data$C_pctnsp, data = data, weights = C_N,subset = R==0)
Ct2_8b # Compare to Clinton Table 2 Model 8
Ct2_8c = lm(x106mean ~ C_pctspid + C_pctiid + C_pctopid + data$splc + data$ilc + data$oplc + data$C_pctsp + data$C_pcti + data$C_pctop, data = data, weights = C_N, subset = R==0)
Ct2_8c # Compare to Clinton Table 2 Model 8
stargazer(Ct2_5,Ct2_5b,Ct2_5c,Ct2_8,Ct2_8b,Ct2_8c, omit.stat=c("LL","ser","f"),
title = "Table 2 Replication - Clinton Weights",
dep.var.labels=c("Legislator Ideal Point"),
column.labels=c("C-M5","E-M5:A","E-M5:3G", "C-M8","E-M8:A","E-M8:3G"),
covariate.labels=c("% SP x SP Ideology","% NSP x NSP Ideology","% IND x IND Ideology","% OP x OP Ideology",
"SP Ideology", "NSP Ideology", "IND Ideology","OP Ideology",
"% SP","% NSP","% IND","% OP"))
# Replicate Clinton Table 2
Ct2k_5 = lm(x106kmean ~ C_pctspid + C_pctnspid, data = data, weights = C_N, subset = R==1)
Ct2k_5 # Clinton Table 2 Model 5
Ct2k_8 = lm(x106kmean ~ C_pctspid + C_pctnspid, data = data, weights = C_N, subset = R==0)
Ct2k_8 # Clinton Table 2 Model 8
Ct2k_5b = lm(x106kmean ~ C_pctspid + C_pctnspid + data$splc + data$nsplc + data$C_pctsp + data$C_pctnsp, data = data, weights = C_N, subset = R==1)
Ct2k_5b # Compare to Clinton Table 2 Model 5
Ct2k_5c = lm(x106kmean ~ C_pctspid + C_pctiid + C_pctopid + data$splc + data$ilc + data$oplc + data$C_pctsp + data$C_pcti + data$C_pctop, data = data, weights = C_N, subset = R==1)
Ct2k_5c # Compare to Clinton Table 2 Model 5
Ct2k_8b = lm(x106kmean ~ C_pctspid + C_pctnspid + data$splc + data$nsplc + data$C_pctsp + data$C_pctnsp, data = data, weights = C_N, susbet = R==0)
Ct2k_8b # Compare to Clinton Table 2 Model 8
Ct2k_8c = lm(x106kmean ~ C_pctspid + C_pctiid + C_pctopid + data$splc + data$ilc + data$oplc + data$C_pctsp + data$C_pcti + data$C_pctop, data = data, weights = C_N, subset= R==0)
Ct2k_8c # Compare to Clinton Table 2 Model 8
stargazer(Ct2k_5,Ct2k_5b,Ct2k_5c,Ct2k_8,Ct2k_8b,Ct2k_8c, omit.stat=c("LL","ser","f"),
title = "Table 2 Replication - Clinton Weights",
dep.var.labels=c("Legislator Ideal Point (Key Votes)"),
column.labels=c("C-M5","E-M5:A","E-M5:3G", "C-M8","E-M8:A","E-M8:3G"),
covariate.labels=c("% SP x SP Ideology","% NSP x NSP Ideology","% IND x IND Ideology","% OP x OP Ideology",
"SP Ideology", "NSP Ideology", "IND Ideology","OP Ideology",
"% SP","% NSP","% IND","% OP"))
Ct2k_8c = lm(x106kmean ~ C_pctspid + C_pctiid + C_pctopid + data$splc + data$ilc + data$oplc + data$C_pctsp + data$C_pcti + data$C_pctop, data = data, weights = C_N, subset= R==0)
Ct2k_8c # Compare to Clinton Table 2 Model 8
Ct2k_8b = lm(x106kmean ~ C_pctspid + C_pctnspid + data$splc + data$nsplc + data$C_pctsp + data$C_pctnsp, data = data, weights = C_N, susbet = R==0)
Ct2k_8b # Compare to Clinton Table 2 Model 8
Ct2k_8b = lm(x106kmean ~ C_pctspid + C_pctnspid + data$splc + data$nsplc + data$C_pctsp + data$C_pctnsp, data = data, weights = C_N, susbet = R==0)
Ct2k_8b = lm(x106kmean ~ C_pctspid + C_pctnspid + data$splc + data$nsplc + data$C_pctsp + data$C_pctnsp, data = data, weights = C_N, susbet= R==0)
Ct2k_8c = lm(x106kmean ~ C_pctspid + C_pctiid + C_pctopid + data$splc + data$ilc + data$oplc + data$C_pctsp + data$C_pcti + data$C_pctop, data = data, weights = C_N, subset= R==0)
Ct2k_8c # Compare to Clinton Table 2 Model 8
# Replicate Clinton Table 2
Ct2k_5 = lm(x106kmean ~ C_pctspid + C_pctnspid, data = data, weights = C_N, subset = R==1)
Ct2k_5 # Clinton Table 2 Model 5
Ct2k_8 = lm(x106kmean ~ C_pctspid + C_pctnspid, data = data, weights = C_N, subset = R==0)
Ct2k_8 # Clinton Table 2 Model 8
Ct2k_5b = lm(x106kmean ~ C_pctspid + C_pctnspid + data$splc + data$nsplc + data$C_pctsp + data$C_pctnsp, data = data, weights = C_N, subset = R==1)
Ct2k_5b # Compare to Clinton Table 2 Model 5
Ct2k_5c = lm(x106kmean ~ C_pctspid + C_pctiid + C_pctopid + data$splc + data$ilc + data$oplc + data$C_pctsp + data$C_pcti + data$C_pctop, data = data, weights = C_N, subset = R==1)
Ct2k_5c # Compare to Clinton Table 2 Model 5
Ct2k_8b = lm(x106kmean ~ C_pctspid + C_pctnspid + data$splc + data$nsplc + data$C_pctsp + data$C_pctnsp, data = data, weights = C_N, susbet= R==0)
Ct2k_8b = lm(x106kmean ~ C_pctspid + C_pctnspid + data$splc + data$nsplc + data$C_pctsp + data$C_pctnsp, data = data, weights = C_N, subset= R==0)
Ct2k_8b # Compare to Clinton Table 2 Model 8
Ct2k_8c = lm(x106kmean ~ C_pctspid + C_pctiid + C_pctopid + data$splc + data$ilc + data$oplc + data$C_pctsp + data$C_pcti + data$C_pctop, data = data, weights = C_N, subset= R==0)
Ct2k_8c # Compare to Clinton Table 2 Model 8
stargazer(Ct2k_5,Ct2k_5b,Ct2k_5c,Ct2k_8,Ct2k_8b,Ct2k_8c, omit.stat=c("LL","ser","f"),
title = "Table 2 Replication - Clinton Weights",
dep.var.labels=c("Legislator Ideal Point (Key Votes)"),
column.labels=c("C-M5","E-M5:A","E-M5:3G", "C-M8","E-M8:A","E-M8:3G"),
covariate.labels=c("% SP x SP Ideology","% NSP x NSP Ideology","% IND x IND Ideology","% OP x OP Ideology",
"SP Ideology", "NSP Ideology", "IND Ideology","OP Ideology",
"% SP","% NSP","% IND","% OP"))
Ct2k_8c = lm(x106kmean ~ C_pctspid + C_pctiid + C_pctopid + data$splc + data$ilc + data$oplc + data$C_pctsp + data$C_pcti + data$C_pctop, data = data, weights = C_N, subset= R==0)
Ct2k_8c # Compare to Clinton Table 2 Model 8
Ct2k_8c = lm(x106kmean ~ C_pctspid + C_pctiid + C_pctopid + data$splc + data$ilc + data$oplc + data$C_pctsp + data$C_pcti + data$C_pctop, data = subset(data, R==0), weights = C_N)
Ct2k_8c = lm(x106kmean ~ C_pctspid + C_pctiid + C_pctopid + data$splc + data$ilc + data$oplc + data$C_pctsp + data$C_pcti + data$C_pctop, data = subset(data, R==0), weights = C_N)
Ct2k_8c # Compare to Clinton Table 2 Model 8
Ct2k_8c = lm(x106kmean ~ C_pctspid + C_pctiid + C_pctopid + data$splc + data$ilc + data$oplc + data$C_pctsp + data$C_pcti + data$C_pctop, data = data, subset(data, R==0), weights = C_N)
